AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >-



Parameters:
  Project:
    Description: nome do Project
    Type: String
    Default: Pontte
  StageName:
    Description: nome do estagio na URL quando em producao
    Type: String
    Default: v1

  APIDomainName:
    Description: nome da API
    Type: String

  BasePath:
    Description: base path da API
    Type: String
    Default: Leads

  Environment:
    Description: ambiente de execucao do servico
    Type: String
    AllowedValues:
      - dev
      - staging
      - prod

Conditions:
  Prod: !Equals [ !Ref Environment, prod ]

Globals:
  Function:
    Runtime: python3.8
    MemorySize: 1024
    Timeout: 120
    Environment:
      Variables:
        PAERTNERS_DB: "Organization-aou76nv52bapbebq3uxerkfcce-staging"
        API_ENDPOINT: !If [ Prod, 'api-parcerias.pontte.com.br', !Sub 'api-${Environment}-parcerias.pontte.com.br' ]
    Tags:
      Project: !Ref Project
      Environment: !Ref Environment

Resources:
  #  AztronicApi:
  #    Type: AWS::Serverless::Api
  #    Properties:
  #      Name: !Sub "AztronicApi-${Environment}"
  #      StageName: !If [ Prod, !Ref StageName, !Ref Environment ]
  #      Auth:
  #        Authorizers:
  #          CognitoAuthorizer:
  #            UserPoolArn: !Ref CognitoUserPoolArn
  #
  #    AztronicApiMapping:
  #      Type: AWS::ApiGateway::BasePathMapping
  #      Properties:
  #        BasePath: "aztronic"
  #        DomainName: !Ref APIDomainName
  #        RestApiId: !Ref AztronicApi
  #        Stage: !Ref AztronicApi.Stage

  LeadsApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "LeadsApi-${Environment}"
      StageName: !If [ Prod, !Ref StageName, !Ref Environment ]

  LeadsApiMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: !Ref BasePath
      DomainName: !Ref APIDomainName
      RestApiId: !Ref LeadsApi
      Stage: !Ref LeadsApi.Stage
  
  GetAllLeadsFn:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: !Sub "${Project}-GetAllLeadsFn-${Environment}"
      Description: Retorna todos os leads.
      CodeUri: get_all
      Handler: app.lambda_handler
      Tracing: Active
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: "/v1/leads"
            Method: GET
            RestApiId: !Ref LeadsApi

  GetLeadFn:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: !Sub "${Project}-GetLeadFn-${Environment}"
      Description: Retorna um lead.
      CodeUri: Get
      Handler: app.lambda_handler
      Tracing: Active
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref LeadsApi
            Path: "/v1/lead"
            Method: GET

  CreateLeadFn:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: !Sub "${Project}-CreateLeadFn-${Environment}"
      Description: Cria um lead.
      CodeUri: Create
      Handler: app.lambda_handler
      Tracing: Active
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref LeadsApi
            Path: "/v1/lead"
            Method: POST

