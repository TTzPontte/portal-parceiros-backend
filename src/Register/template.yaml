AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >-
  Funcoes relacionadas ao Registro do usu√°rio no portal do parceiro

Parameters:
  StageName:
    Description: nome do estagio na URL quando em producao
    Type: String
    Default: v1

  Project:
    Description: nome do Project
    Type: String
    Default: Pontte

  Environment:
    Description: ambiente de execucao do servico
    Type: String
    AllowedValues:
      - test
      - dev
      - staging
      - prod

  CommonLayer:
    Description: common resources for lambdas
    Type: String

  LibrariesLayer:
    Description: common libraries for lambdas
    Type: String

  APIDomainName:
    Description: nome da API
    Type: String

  BasePath:
    Description: base path da API
    Type: String
    Default: register

  CognitoUserPoolArn:
    Description: ARN do User Pool do Cognito
    Type: String

Conditions:
  Prod: !Equals [ !Ref Environment, prod ]

Globals:
  Function:
    Layers:
      - !Ref CommonLayer
      - !Ref LibrariesLayer
    Runtime: python3.8
    MemorySize: 1024
    Timeout: 120
    Environment:
      Variables:
        ENV: !Ref Environment
        PROJECT: !Ref Project
        APP_SYNC_API_ID: !Sub "{{resolve:ssm:/portalparceirofrontend/appsync/id/${Environment}:1}}"
    Tags:
      Project: !Ref Project
      Environment: !Ref Environment
  Api:
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'Authorization,Content-Type,If-Match'"
      AllowOrigin: "'*'"

Resources:
  RegisterApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "${Project}-RegisterApi-${Environment}"
      StageName: !If [ Prod, !Ref StageName, !Ref Environment ]
      Auth:
        Authorizers:
          CognitoAuthorizer:
              UserPoolArn: !Ref CognitoUserPoolArn
      GatewayResponses:
        DEFAULT_4xx:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Headers: "'*'"
              Access-Control-Allow-Origin: "'*'"

        DEFAULT_5XX:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Headers: "'*'"
              Access-Control-Allow-Origin: "'*'"

        EXPIRED_TOKEN:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Headers: "'*'"
              Access-Control-Allow-Origin: "'*'"

  RegisterMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: !Ref BasePath
      DomainName: !Ref APIDomainName
      RestApiId: !Ref RegisterApi
      Stage: !Ref RegisterApi.Stage

  InvitationFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Project}-InvitationFn-${Environment}"
      Description: function that does a register action or decline in user's invitation
      CodeUri: invite
      Handler: app.lambda_handler
      Tracing: Active
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RegisterApi
            Path: "/v1/register/invite"
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: !Sub "portalparceirofrontend/api/${Environment}"

  PosConfirmationFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Project}-PosConfirmationFn-${Environment}"
      Description: Invoked automatically after a user has confirmed their account
      CodeUri: pos_confirmation
      Handler: app.lambda_handler
      Tracing: Active
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/userInvite/${Environment}:1}}"
        - Statement:
            - Sid: "CognitoAdminAddUserToGroupPolicy"
              Effect: Allow
              Action:
                - cognito-idp:AdminAddUserToGroup
              Resource: !Sub "arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/{{resolve:ssm:/portalparceirofrontend/cognito/${Environment}:1}}"
        - SSMParameterReadPolicy:
            ParameterName: !Sub "userInvite/${Environment}"
        - SSMParameterReadPolicy:
            ParameterName: !Sub "portalparceirofrontend/cognito/${Environment}"
        - SSMParameterReadPolicy:
            ParameterName: !Sub "portalparceirofrontend/api/${Environment}"

